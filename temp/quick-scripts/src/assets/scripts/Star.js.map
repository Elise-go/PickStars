{"version":3,"sources":["assets\\scripts\\Star.js"],"names":["cc","Class","Component","properties","pickRadius","game","onLoad","enabled","init","getPlayerDistance","playerPos","player","getPosition","dist","node","position","sub","mag","onPicked","pos","gainScore","despawnStar","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACR;IACAC,UAAU,EAAC,CAFH;IAGRC,IAAI,EAAC;EAHG,CAHP;EAULC,MAVK,oBAUK;IACN,KAAKC,OAAL,GAAe,KAAf;EACH,CAZI;EAcLC,IAdK,gBAcAH,IAdA,EAcK;IACN,KAAKA,IAAL,GAAYA,IAAZ;IACA,KAAKE,OAAL,GAAe,IAAf;EACH,CAjBI;EAmBLE,iBAnBK,+BAmBc;IACf;IACA,IAAIC,SAAS,GAAG,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,WAAjB,EAAhB;IACA,IAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBN,SAAvB,EAAkCO,GAAlC,EAAX;IACA,OAAOJ,IAAP;EACH,CAxBI;EA0BLK,QA1BK,sBA0BK;IACN,IAAIC,GAAG,GAAG,KAAKL,IAAL,CAAUF,WAAV,EAAV,CADM,CAEN;;IACA,KAAKP,IAAL,CAAUe,SAAV,CAAoBD,GAApB,EAHM,CAIN;;IACA,KAAKd,IAAL,CAAUgB,WAAV,CAAsB,KAAKP,IAA3B;EAEH,CAjCI;EAmCLQ,MAAM,EAAC,gBAASC,EAAT,EAAY;IACf,IAAG,KAAKd,iBAAL,KAA2B,KAAKL,UAAnC,EAA8C;MAC1C,KAAKc,QAAL;MACA;IACH,CAJc,CAMf;;;IACA,IAAIM,YAAY,GAAG,IAAI,KAAKnB,IAAL,CAAUoB,KAAV,GAAgB,KAAKpB,IAAL,CAAUqB,YAAjD;IACA,IAAIC,UAAU,GAAG,EAAjB;IACA,KAAKb,IAAL,CAAUc,OAAV,GAAoBD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAE,MAAIG,UAAN,CAAvB,CAAjC;EACH;AA7CI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //星星和主角之间的距离小于这个数值时，就会完成收集\n        pickRadius:0,\n        game:null\n    },\n\n\n    onLoad () {\n        this.enabled = false;\n    },\n\n    init(game){\n        this.game = game;\n        this.enabled = true;\n    },\n\n    getPlayerDistance(){\n        //根据player节点位置判断距离\n        var playerPos = this.game.player.getPosition();\n        var dist = this.node.position.sub(playerPos).mag();\n        return dist;\n    },\n\n    onPicked(){\n        var pos = this.node.getPosition();\n        //传入 pos 是因为通过 star节点 的位置来确定分数显示的位置\n        this.game.gainScore(pos);\n        // 当星星被收集时，调用Game脚本中的接口，销毁当前星星节点，然后生成一个新的星星\n        this.game.despawnStar(this.node);\n\n    },\n\n    update:function(dt){\n        if(this.getPlayerDistance() < this.pickRadius){\n            this.onPicked();\n            return;\n        }\n\n        // 根据Game脚本中的计时器更新星星的透明度\n        var opacityRatio = 1 - this.game.timer/this.game.starDuration;\n        var minOpacity = 50;\n        this.node.opacity = minOpacity + Math.floor(opacityRatio*(255-minOpacity));\n    }\n    \n});\n"]}